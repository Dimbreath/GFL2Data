---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 6.
--- DateTime: 18/9/11 16:53
---

require("UI.UIBasePanel")
require("UI.Formation.UI_TeamSelTempView")
require("UI.Formation.UIFormationSelectItem")

UI_TeamSelTempPanel = class("UI_TeamSelTempPanel", UIBasePanel);
UI_TeamSelTempPanel.__index = UI_TeamSelTempPanel;

UI_TeamSelTempPanel.mView = nil;
UI_TeamSelTempPanel.mNetTeamHandle = nil;
UI_TeamSelTempPanel.mFormationSelectItems = nil;

UI_TeamSelTempPanel.mPath_SelecetItem = "Formation/FormationSelectMember.prefab";
UI_TeamSelTempPanel.mCurrentSelectTeamId = 0;

UI_TeamSelTempPanel.mData = nil;

function UI_TeamSelTempPanel:ctor()
    UI_TeamSelTempPanel.super.ctor(self);
end

function UI_TeamSelTempPanel.Open()
    self.mNetTeamHandle = CS.NetCmdTeamData.Instance;
    UIManager.OpenUI(UIDef.UI_TeamSelTempPanel);
end

function UI_TeamSelTempPanel.Close()
    self:ClearFormationSelectItems();
    UIManager.CloseUI(UIDef.UI_TeamSelTempPanel);
end

function UI_TeamSelTempPanel.Init(root, data)

    UI_TeamSelTempPanel.super.SetRoot(UI_TeamSelTempPanel, root);

    self = UI_TeamSelTempPanel;

    self.mData = data;
    self.mView = UI_TeamSelTempView;
    self.mView:InitCtrl(root);

    self.mNetTeamHandle = CS.NetCmdTeamData.Instance;

    self.mFormationSelectItems = List:New(UIFormationSelectItem);

    UIUtils.GetListener(self.mView.mButton_IntoBattle.gameObject).onClick = self.OnIntoBattleClick;
    UIUtils.GetListener(self.mView.mButton_ExitStage.gameObject).onClick = self.OnExitBattleClick;

    self.mCurrentSelectStage = data;
    self:SetTeamSelectView();
end

function UI_TeamSelTempPanel.OnInit()
    self = UI_TeamSelTempPanel;
    self.mNetTeamHandle = CS.NetCmdTeamData.Instance;
end

function UI_TeamSelTempPanel.OnShow()
    self = UI_TeamSelTempPanel;
end

function UI_TeamSelTempPanel.OnRelease()

    self = UI_TeamSelTempPanel;
end


function UI_TeamSelTempPanel:SetTeamSelectView()
    local prefab = UIUtils.GetGizmosPrefab(self.mPath_SelecetItem,self);

    for i = 1, CarrierNetCmdHandler.CarrierCount do
        if prefab ~= nil then
            local carrier = CarrierNetCmdHandler:GetCarrier(i - 1);
            if carrier.team_id ~= 0 and self:HasMember(carrier.team_id) then
                local prefabInst = instantiate(prefab);
                local detailItem = UIFormationSelectItem.New();
                detailItem:InitCtrl(prefabInst.transform);
                UIUtils.AddListItem(prefabInst, self.mView.mGrid_FormationSelect);
                detailItem.mImage_Select.gameObject:SetActive(false);
                detailItem.mText_TeamNum.text = "编队"..(carrier.team_id);

                detailItem:SetUIData(carrier);

                local selectBtn = UIUtils.GetListener(detailItem.mButton_Select.gameObject);
                selectBtn.onClick = self.OnTeamSelectItemClick;
                selectBtn.param = detailItem;
                selectBtn.paramData = carrier.team_id;

                self.mFormationSelectItems:Add(detailItem);
            end
        end
    end
end

function UI_TeamSelTempPanel:HasMember(teamid)
    local member = NetCmdTeamData:GetTeamById(teamid);
    for i = 0, member.Length - 1 do
        if member[i] ~= nil then
            return true;
        end
    end

    return false;
end

function UI_TeamSelTempPanel.OnTeamSelectItemClick(gameobj)
    local btnTrigger = getcomponent(gameobj, typeof(CS.EventTriggerListener))
    if btnTrigger ~= nil then
        if btnTrigger.param ~= nil then
            local detailItem = btnTrigger.param;
            setactive(detailItem.mImage_Select.gameObject, true);
            for i = 1, self.mFormationSelectItems:Count() do
                if detailItem ~= self.mFormationSelectItems[i] then
                    setactive(detailItem.mImage_Select.gameObject, false);
                end
            end
        end
        if btnTrigger.paramData ~= nil then
            self.mCurrentSelectTeamId = btnTrigger.paramData;
        end
    end
end

function UI_TeamSelTempPanel.OnExitBattleClick(gameobj)
    CS.BattleNetCmdHandler.Instance:SendReqStageExitCmd(StageExitCallBack);
end

function UI_TeamSelTempPanel.OnIntoBattleClick(gameobj)
    self = UI_TeamSelTempPanel;
    if self.mCurrentSelectTeamId == -1 then
        return;
    end
    local guns = self.mNetTeamHandle:GetTeamById(self.mCurrentSelectTeamId);
    if guns ~= nil then

        local hasMember = true;
        for i = 1, guns.Length do
            if guns[i - 1] ~= nil then
                hasMember = true;
                break;
            end
        end

        if guns.Length == 0 or not hasMember then
            MessageBox.Show("注意", "当前编队没有乘客", nil, nil);
            return;
        end

        --防御战测试需要，非防御战传0
        local spot_id = 0;
        if self.mCurrentSelectStage.type == CS.StageType.eDefense then
            spot_id = CS.DefenseBattleManager.TEST_SPOT_ID;
            CS.BattleNetCmdHandler.Instance:Test_EnterDefenseStage(self.mCurrentSelectStage, self.mNetTeamHandle:GetTeamById(self.mCurrentSelectTeamId)[0].team_id, spot_id,12);
        else
            CS.BattleNetCmdHandler.Instance:EnterStageDirect(self.mCurrentSelectStage, self.mCurrentSelectTeamId, spot_id);
        end
    end
end

function UI_TeamSelTempPanel.StageExitCallBack(ret)
    if ret == CS.CMDRet.eSuccess then
        print("战役退出成功");
    else
        print("战役退出失败");
    end
end

function UI_TeamSelTempPanel:ClearFormationSelectItems()

    for i = 1, self.mFormationSelectItems:Count() do
        gfdestroy(self.mFormationSelectItems[i]:GetRoot());
    end

    self.mFormationSelectItems:Clear();
end

function UI_TeamSelTempPanel.OnReturnBtnClick(gameobj)
    UI_TeamSelTempPanel.Close()
end