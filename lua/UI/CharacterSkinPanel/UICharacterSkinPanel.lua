---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 18/12/5 17:20
---
require("UI.UIBasePanel")
require("UI.CharacterSkinPanel.UICharacterSkinPanelView")
require("UI.SkinIconItem.UISkinIconItem")

UICharacterSkinPanel = class("UICharacterSkinPanel", UIBasePanel);
UICharacterSkinPanel.__index = UICharacterSkinPanel;

UICharacterSkinPanel.mView = nil;
UICharacterSkinPanel.mCostumeList = nil;
UICharacterSkinPanel.mPath_CostumeItem = "Character/UISkinIconItem.prefab";

UICharacterSkinPanel.mIsClickDetail = false;
UICharacterSkinPanel.mCurGunModel = nil;
UICharacterSkinPanel.mDefaultCostumeItem = nil;
UICharacterSkinPanel.mSelectedCostumeItem = nil;

UICharacterSkinPanel.mIsSendingCancelNewTipsCmd = false;

function UICharacterSkinPanel:ctor()
    UICharacterSkinPanel.super.ctor(self);
end

function UICharacterSkinPanel.Open()
    self = UICharacterSkinPanel;
    self:InitShow();
end

function UICharacterSkinPanel.Close()
    UICharacterSkinPanel:ResetModel(true);
end

function UICharacterSkinPanel:ResetModel(resume)
    if UICharacterSkinPanel.mDefaultCostumeItem == nil then
        return;
    end
    local gunModelId = UICharacterSkinPanel.mDefaultCostumeItem.TableData.model_config_id;
    if UICharacterDetailPanel.mIntoType == UIDef.UIFormationPanel then
        self.mCurGunModel = UIFormationPanel:GetModel(gunModelId, resume);
    elseif UICharacterDetailPanel.mIntoType == UIDef.UIFacilityBarrackPanel then
        self.mCurGunModel = UIFacilityBarrackPanel:CreateModel(gunModelId);
    end

    UICharacterSkinPanel.mDefaultCostumeItem = nil;
    UICharacterSkinPanel:ReleaseItem();
end

function UICharacterSkinPanel.Init(root, data)

    UICharacterSkinPanel.super.SetRoot(UICharacterSkinPanel, root);
    UICharacterSkinPanel.mData = data;

    UICharacterSkinPanel.mView = UICharacterSkinPanelView;
    UICharacterSkinPanel.mView:InitCtrl(root);

    UICharacterSkinPanel.mCostumeList = List:New(UISkinIconItem);

    UIUtils.GetButtonListener(UICharacterSkinPanel.mView.mBtn_SkinDetailButton.gameObject).onClick
        = UICharacterSkinPanel.OnDetailClick;



    UIUtils.GetButtonListener(UICharacterSkinPanel.mView.mBtn_ConfirmButton.gameObject).onClick
        = UICharacterSkinPanel.OnConfirmClick;

    UIUtils.GetButtonListener(UICharacterSkinPanel.mView.mBtn_ViewButton.gameObject).onClick
        = UICharacterSkinPanel.OnPreviewClick;
    UIUtils.GetButtonListener(UICharacterSkinPanel.mView.mBtn_CloseView.gameObject).onClick
        = UICharacterSkinPanel.OnPreViewCloseClick;
end

function UICharacterSkinPanel.OnInit()

end

function UICharacterSkinPanel.OnShow()
    self = UICharacterSkinPanel;
end

function UICharacterSkinPanel.OnRelease()

    self = UICharacterSkinPanel;
end

function UICharacterSkinPanel.Hide()
    self = UICharacterSkinPanel;
    self:Show(false);
    UICharacterSkinPanel:ResetModel(false);
end

function UICharacterSkinPanel:InitShow()

    if UICharacterDetailPanel.mIntoType == UIDef.UIAdjutantPanel then
        self:Show(true);
        self:ResetData();
        self:SetAdjutantCostumesList();

        gfdebug("刷新界面");

    else
        self:Show(true);
        self:ResetData();
        --皮肤列表
        self:SetCostumesList();
        --界面基础信息
        self.mView:SetBaseView(FacilityBarrackData.CurrentTrainGun);
        self.mView:SetPanelState(false);

    end

end

function UICharacterSkinPanel:ResetData()

    UICharacterSkinPanel.mIsClickDetail = false;
    UICharacterSkinPanel.mCurGunModel = nil;
    UICharacterSkinPanel.mDefaultCostumeItem = nil;
    UICharacterSkinPanel.mSelectedCostumeItem = nil;

    UICharacterSkinPanel.mIsSendingCancelNewTipsCmd = false;
end

function UICharacterSkinPanel.OnDetailClick(gameObject)
    if UICharacterSkinPanel.mIsClickDetail then
        UICharacterSkinPanel.mView:SetPanelState(false);
        UICharacterSkinPanel.mIsClickDetail = false;
    else
        UICharacterSkinPanel.mView:SetPanelState(true);
        UICharacterSkinPanel.mIsClickDetail = true;
    end
end

function UICharacterSkinPanel.OnConfirmClick(gameObject)
    self=UICharacterSkinPanel;
    if UICharacterSkinPanel.mSelectedCostumeItem ~= nil then

        if UICharacterDetailPanel.mIntoType == UIDef.UIAdjutantPanel then

            NetCmdIllustrationData:SendReqadjutant_costume_changeCmd(UIAdjutantPanel.mCurSeclectAdjutantSTCID,UICharacterSkinPanel.mSelectedCostumeItem.TableData.id,self.AdjutantUpdateView);


        else
            --print("当前选择的制服id = "..UICharacterSkinPanel.mSelectedCostumeItem.TableData.id .." 默认的制服id = "..UICharacterSkinPanel.mDefaultCostumeItem.TableData.id)
            if UICharacterSkinPanel.mSelectedCostumeItem.TableData.id ==
            UICharacterSkinPanel.mDefaultCostumeItem.TableData.id then
                return;
            end

            FacilityBarrackData.SendChangeCostumeCmd(UICharacterSkinPanel.mSelectedCostumeItem.TableData.id);
            --if UICharacterSkinPanel.mSelectedCostumeItem.TableData.sequence == 0 then
            --    FacilityBarrackData.SendChangeCostumeCmd(0);
            --else
            --    FacilityBarrackData.SendChangeCostumeCmd(UICharacterSkinPanel.mSelectedCostumeItem.TableData.id);
            --end
        end
    end
end

function UICharacterSkinPanel.AdjutantUpdateView(gameObject)
    self=UICharacterSkinPanel;
    self:InitShow();
end


function UICharacterSkinPanel.OnPreviewClick(gameObject)
    if UICharacterDetailPanel.mIntoType == UIDef.UIAdjutantPanel then
        CS.SceneSys.Instance.currentScene:TweenCamera(4);
        UICharacterSkinPanel.mView:SetPreviewState(true);

    else
        UICharacterSkinPanel.mView:SetPreviewState(true);
        UICharacterDetailPanel.SetTopBottom(false);
        FacilityBarrackData.TweenCamToCostume();
        InputSys:OneFingerDragingEvent('+', UICharacterSkinPanel.OneFingerDragingEventHandle);
    end
end

function UICharacterSkinPanel.OnPreViewCloseClick(gameObject)

    if UICharacterDetailPanel.mIntoType == UIDef.UIAdjutantPanel then
        CS.SceneSys.Instance.currentScene:TweenCamera(1);
        UICharacterSkinPanel.mView:SetPreviewState(false);
    else
        UICharacterSkinPanel.mView:SetPreviewState(false);
        UICharacterDetailPanel.SetTopBottom(true);
        print("main type "..UICharacterDetailPanel.mSwitchType)
        if UICharacterDetailPanel.mSwitchType == UICharacterDetailPanel.eSwitchViewType.Detail then
            FacilityBarrackData.TweenCamToDetail();
        else
            FacilityBarrackData.TweenCamToPowerUpUpgrade();
        end
        InputSys:OneFingerDragingEvent('-', UICharacterSkinPanel.OneFingerDragingEventHandle);
        UICharacterSkinPanel.ResetModelRot();

    end
end

function UICharacterSkinPanel:SetCostumesList()

    local curGun = FacilityBarrackData.CurrentTrainGun;
    local costumesData = TableDataMgr:GetGunCostumesData(curGun.stc_gun_id);
    if costumesData.Length == 0 then
        printstack("一个皮肤都没有！！！")
        return;
    end

    printstack("默认着装 ： "..curGun.costume)

    local curCostume = nil;
    for i = 0, costumesData.Count - 1 do
        local index = i + 1;
        local costumeData = costumesData[i];
        local costumeItem = self:CreateItem(index);
        if costumeItem == nil then
            print("創建  失敗！！！")
        end

        costumeItem.IsNew = self:IsCostumeNew(costumeData.id);

        --找到对应的皮肤信息
        if curGun.costume == 0 then
            if costumeData.sequence == 0 then
                costumeItem.IsLocked = false;
                curCostume = costumeItem;
                costumeItem.IsDressed = true;
            else
                costumeItem.IsLocked = self:IsCostumeLocked(costumeData.id);
            end
        else
            costumeItem.IsLocked = self:IsCostumeLocked(costumeData.id);
            if curGun.costume == costumeData.id then
                curCostume = costumeItem;
                costumeItem.IsDressed = true;
            end
        end

        local btnListener = UIUtils.GetButtonListener(costumeItem.mBtn_SkinIcon.gameObject);
        btnListener.onClick = self.OnCostumeItemClick;
        btnListener.param = costumeItem;

        costumeItem:SetData(costumeData);
    end

    --设置默认的皮肤信息
    self.mDefaultCostumeItem = curCostume;
    print("设置的默认皮肤id = ".. curCostume.TableData.model_config_id)
    self:SetDetail(curCostume);
end


--设置副官皮肤数据
function UICharacterSkinPanel:SetAdjutantCostumesList()

    local cmdAdjutantData = NetCmdIllustrationData:GetAdjutantByID(UIAdjutantPanel.mCurSeclectAdjutantSTCID);
    local adjutantData=TableData.GetAdjutantData(UIAdjutantPanel.mCurSeclectAdjutantSTCID);


    if adjutantData ~=nil then
        self.mView:SetAdjutantBaseView(adjutantData);
    else
        gferror("adjutant表不存在ID："..adjutantData.id);
        return;
    end


    local costumesData = TableDataMgr:GetGunCostumesData(adjutantData.detail_id);

    if costumesData.Length == 0 then
        printstack("一个皮肤都没有！！！")
        return;
    end


    local curCostume = nil;
    for i = 0, costumesData.Count - 1 do
        local index = i + 1;
        local costumeData = costumesData[i];
        local costumeItem = self:CreateItem(index);
        if costumeItem == nil then
            print("創建  失敗！！！")
        end

        costumeItem.IsNew = self:IsCostumeNew(costumeData.id);

        --找到对应的皮肤信息
        if cmdAdjutantData.costume == 0 then
            if costumeData.sequence == 0 then
                costumeItem.IsLocked = false;
                curCostume = costumeItem;
                costumeItem.IsDressed = true;
            else
                costumeItem.IsLocked = self:IsCostumeLocked(costumeData.id);
            end
        else
            costumeItem.IsLocked = self:IsCostumeLocked(costumeData.id);
            if cmdAdjutantData.costume == costumeData.id then
                curCostume = costumeItem;
                costumeItem.IsDressed = true;
            else
                costumeItem.IsDressed = false;
            end
        end

        local btnListener = UIUtils.GetButtonListener(costumeItem.mBtn_SkinIcon.gameObject);
        btnListener.onClick = self.OnCostumeItemAdjutantClick;
        btnListener.param = costumeItem;
        costumeItem:SetData(costumeData);
    end

    --设置默认的皮肤信息
    self.mDefaultCostumeItem = curCostume;
    print("设置的默认皮肤id = ".. curCostume.TableData.model_config_id)
    self:SetDetail(curCostume);

end


function UICharacterSkinPanel.OnCostumeItemAdjutantClick(gameObject)


    local btnListener = getcomponent(gameObject, typeof(CS.ButtonEventTriggerListener));
    if btnListener ~= nil then
        local costumeItem = btnListener.param;
        self.mSelectedCostumeItem = costumeItem;
        print("点击Costume的id = "..self.mSelectedCostumeItem.TableData.id)
        self:SetDetail(costumeItem);

        ---------改变3D模型

        CS.SceneSys.Instance.currentScene:ChangeCostumeInCurSelectAdj(self.mSelectedCostumeItem.TableData.id);

        if costumeItem.IsNew then

            if costumeItem.TableData.type==1 then
                FacilityBarrackData.SendCancelCostumeNewTipCmd(costumeItem.TableData.id)
                self.mIsSendingCancelNewTipsCmd = true;
            else
                FacilityBarrackData.SendCancelCostumeNewTipNPCCmd(costumeItem.TableData.id)
                self.mIsSendingCancelNewTipsCmd = true;
            end
        end
    end
end



function UICharacterSkinPanel:CreateItem(index)
    local costumeItem = nil;
    if self.mCostumeList[index] ~= nil then
        costumeItem = self.mCostumeList[index];
    else
        local costumePrefab = UIUtils.GetGizmosPrefab(self.mPath_CostumeItem,self);
        local instObj = instantiate(costumePrefab);
        costumeItem = UISkinIconItem.New();
        costumeItem:InitCtrl(instObj.transform);
        UIUtils.AddListItem(instObj, self.mView.mLayout_SkinListPanel.transform)
        self.mCostumeList:Add(costumeItem);
    end

    return costumeItem;
end

function UICharacterSkinPanel:ReleaseItem()
    for i = 1, self.mCostumeList:Count() do
        self.mCostumeList[i]:DestroySelf();
    end
    self.mCostumeList:Clear();
end

function UICharacterSkinPanel.OnCostumeItemClick(gameObject)
    if self.mIsSendingCancelNewTipsCmd then
        return;
    end
    local btnListener = getcomponent(gameObject, typeof(CS.ButtonEventTriggerListener));
    if btnListener ~= nil then
        local costumeItem = btnListener.param;
        self.mSelectedCostumeItem = costumeItem;
        print("点击服装的id = "..self.mSelectedCostumeItem.TableData.model_config_id)
        self:SetDetail(costumeItem);
        if costumeItem.TableData.sequence ~= 0 and costumeItem.IsNew then
            FacilityBarrackData.SendCancelCostumeNewTipCmd(costumeItem.TableData.id)
            self.mIsSendingCancelNewTipsCmd = true;
        end
    end
end

function UICharacterSkinPanel:SetDetail(costumeItem)
    self.mView:SetChoseCostume(costumeItem.TableData, costumeItem.IsLocked);
    self:SetViewItem(costumeItem.TableData);
    if UICharacterDetailPanel.mIntoType == UIDef.UIFormationPanel then
        self.mCurGunModel = UIFormationPanel:GetModel(costumeItem.TableData.model_config_id, false);
    elseif UICharacterDetailPanel.mIntoType == UIDef.UIFacilityBarrackPanel then
        self.mCurGunModel = UIFacilityBarrackPanel:CreateModel(costumeItem.TableData.model_config_id);
    elseif UICharacterDetailPanel.mIntoType == UIDef.UIAdjutantPanel then
        --self.mCurGunModel = UIAdjutantPanel:CreateModel(costumeItem.TableData.model_config_id);
    end
end

function UICharacterSkinPanel:SetViewItem(costumeData)
    for i = 1, self.mCostumeList:Count() do
        local listItem = self.mCostumeList[i];
        if costumeData.id == listItem.TableData.id then
            listItem.IsClicked = true;
        else
            listItem.IsClicked = false;
        end
        listItem:SetState();
    end
end

--在已经拥有的里面找到拥有的
function UICharacterSkinPanel:IsCostumeLocked(costumeId)
    local indexData = NetCmdIllustrationData:GetIllustrationData(9);



    if indexData == nil then
        return true;
    end

    local isLocked = true;
    for m = 0, indexData.stc_ids.Length - 1 do
        if costumeId == indexData.stc_ids[m] then
            isLocked = false;
            break;
        end
    end

    local indexData2 = NetCmdIllustrationData:GetIllustrationData(10);

    if indexData2 == nil then
        return true;
    end

    for m = 0, indexData2.stc_ids.Length - 1 do
        if costumeId == indexData2.stc_ids[m] then
            isLocked = false;
            break;
        end
    end

    return isLocked;
end

function UICharacterSkinPanel:IsCostumeNew(costumeId)
    local indexData = NetCmdIllustrationData:GetIllustrationData(9);

    if indexData == nil then
        return false;
    end

    for m = 0, indexData.news.Length - 1 do
        if costumeId == indexData.news[m] then
            return true;
        end
    end


    local indexData2 = NetCmdIllustrationData:GetIllustrationData(10);

    if indexData2 == nil then
        return true;
    end

    for m = 0, indexData2.stc_ids.Length - 1 do
        if costumeId == indexData2.news[m] then
            return true;
        end
    end


    return false;
end

UICharacterSkinPanel.mRotAccumulation = 0;
function UICharacterSkinPanel.OneFingerDragingEventHandle(offsetH, offsetV)
    offsetH = -offsetH * 0.3;
    UICharacterSkinPanel.mRotAccumulation = UICharacterSkinPanel.mRotAccumulation + offsetH;
    local newEuler = Vector3(0, UICharacterSkinPanel.mRotAccumulation, 0);
    DOTween.TweenEulerAngles(UICharacterSkinPanel.GetTweenEuler, UICharacterSkinPanel.SetTweenEuler, newEuler, 0, 0.1);
end

function UICharacterSkinPanel.GetTweenEuler()
    return UICharacterSkinPanel.mCurGunModel.transform.localEulerAngles;
end

function UICharacterSkinPanel.SetTweenEuler(EulerAngles)
    UICharacterSkinPanel.mCurGunModel.transform.localEulerAngles = EulerAngles;
end

function UICharacterSkinPanel.ResetModelRot()
    --DOTween.DelaySetEuler(UICharacterSkinPanel.mCurGunModel, vectorzero, 0.3, 0);
    --DOTween.TweenEulerAngles(UICharacterSkinPanel.GetTweenEuler, UICharacterSkinPanel.SetTweenEuler, vectorzero, 0.3, 0);
    DOTween.DoTransLocalRotate(UICharacterSkinPanel.mCurGunModel.gameObject.transform, vectorzero, 0.3, 0);
end

function UICharacterSkinPanel.RefreshNewTips()
    --UICharacterSkinPanel.mSelectedCostumeItem.IsNew = false;
    --UICharacterSkinPanel.mSelectedCostumeItem:SetState();

    for i = 1, self.mCostumeList:Count() do
        if UICharacterSkinPanel.mSelectedCostumeItem.TableData.id == self.mCostumeList[i].TableData.id then

            NetCmdIllustrationData:RemoveNewTips(9, self.mCostumeList[i].TableData.id);
            self.mCostumeList[i].IsNew = false;
            self.mCostumeList[i]:SetState();


        end
    end
    UICharacterSkinPanel.mIsSendingCancelNewTipsCmd = false;
end

function UICharacterSkinPanel.RefreshModelCostume()

    --旧的反选
    UICharacterSkinPanel.mDefaultCostumeItem.IsDressed = false;
    UICharacterSkinPanel.mDefaultCostumeItem:SetState();
    --新的重新赋值
    if UICharacterSkinPanel.mSelectedCostumeItem ~= nil then
        UICharacterSkinPanel.mSelectedCostumeItem.IsDressed = true;
        UICharacterSkinPanel.mSelectedCostumeItem:SetState();
        UICharacterSkinPanel.mDefaultCostumeItem = UICharacterSkinPanel.mSelectedCostumeItem;
    end
end