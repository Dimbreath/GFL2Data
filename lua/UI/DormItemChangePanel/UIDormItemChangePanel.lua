---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 18/11/7 20:31
---

require("UI.UIBasePanel")
require("UI.AdjutantPanel.AdjutantItem.UIAdjutantItem");

UIDormItemChangePanel = class("UIDormItemChangePanel", UIBasePanel);
UIDormItemChangePanel.__index = UIDormItemChangePanel;

UIDormItemChangePanel.mView = nil;
UIDormItemChangePanel.mCurArea = 2;
UIDormItemChangePanel.mSlotItemDict = {};
UIDormItemChangePanel.mAreaButtonDict = {};
UIDormItemChangePanel.mDormItemList = nil;

UIDormItemChangePanel.mCurDormId = 1;
UIDormItemChangePanel.mCurSelectDecoItem = nil;

UIDormItemChangePanel.mDecoChangeDict = {};

function UIDormItemChangePanel:ctor()
    UIDormItemChangePanel.super.ctor(self);
end

function UIDormItemChangePanel.Open(currentGun, selectedCount)
    print("selectedCount  = " ..selectedCount)
    self = UIDormItemChangePanel;

    UIDormItemChangePanel:InitShow();
end

function UIDormItemChangePanel.Close()
    UIManager.CloseUI(UIDef.UIDormItemChangePanel);
end

function UIDormItemChangePanel.Hide()
    self = UIDormItemChangePanel;
    self:Show(false);
end

function UIDormItemChangePanel.Init(root, data)
    UIDormItemChangePanel.super.SetRoot(UIDormItemChangePanel, root);

    UIDormItemChangePanel.mData = data;
    UIDormItemChangePanel.mView = UIDormItemChangePanelView;
    UIDormItemChangePanel.mView:InitCtrl(root);
end


function UIDormItemChangePanel.OnInit()
    self = UIDormItemChangePanel;

    self.mCurDormId = self.mData;
    self.mDormItemList = List:New();

    UIUtils.GetButtonListener(self.mView.mBtn_back.gameObject).onClick = self.OnReturnClick;
    UIUtils.GetButtonListener(self.mView.mBtn_Ensure.gameObject).onClick = self.OnDecoItemConfirmClick;

    --self.InitAreaButton();
    self.InitDecoItemList();

    --local dormScene = CS.SceneSys.Instance.currentScene;
    --dormScene:ResetDormDeco(self.mCurDormId,self.mCurArea)
end

-- function UIDormItemChangePanel.InitAreaButton()
--     self = UIDormItemChangePanel;

--     self.mAreaButtonDict[1] = self.mView.mBtn_AreaA;
--     self.mAreaButtonDict[2] = self.mView.mBtn_AreaB;
--     self.mAreaButtonDict[3] = self.mView.mBtn_AreaC;
--     self.mAreaButtonDict[4] = self.mView.mBtn_AreaD;

--     for i = 1, #self.mAreaButtonDict do
--         local btn = UIUtils.GetButtonListener(self.mAreaButtonDict[i].gameObject);
--         btn.onClick = self.OnAreaClicked;
--         btn.param = i;
--     end

--     self.mAreaButtonDict[self.mCurArea]:Select();
-- end

function UIDormItemChangePanel.InitDecoItemList()
    self = UIDormItemChangePanel;

    local slotDatas = NetCmdDormData:GetDormDecoSlotListByDormAndArea(self.mCurDormId,self.mCurArea);
    local decoDatas = NetCmdDormData:GetDormDecoListByDormAndArea(self.mCurDormId,self.mCurArea);

    self.mDormItemList:Clear();
    for i = 0, self.mView.mTrans_BarList.childCount-1 do
		local obj = self.mView.mTrans_BarList:GetChild(i);
		gfdestroy(obj);
    end


    for i = 0,slotDatas.Count-1 do
        local barItem = UIDormBarItem.New();
        local data = slotDatas[i];
        barItem:InitCtrl(self.mView.mTrans_BarList);
        barItem:SetData(data);
        self.mSlotItemDict[data] = barItem;
    end

    for i = 0,decoDatas.Count-1 do
        local decoItem = UIDormNodeItem.New();
        local data = decoDatas[i];
        local parent = self.mSlotItemDict[data.Slot];
        decoItem:InitCtrl(parent.mTrans_NodeList);
        decoItem:SetData(data); 

        local btn = UIUtils.GetButtonListener(decoItem.mBtn_Icon.gameObject);
        btn.onClick = self.OnDecoItemClicked;
        btn.param = decoItem;

        self.mDormItemList:Add(decoItem);

        UIUtils.ForceRebuildLayout(parent.mTrans_NodeList)
    end

    UIUtils.ForceRebuildLayout(self.mView.mTrans_BarList)
end

function UIDormItemChangePanel.OnAreaClicked(gameObject)
    self = UIDormItemChangePanel;
    local btn = UIUtils.GetButtonListener(gameObject);
    self.mCurArea = btn.param;
    self.mDecoChangeDict = {};
    self.InitDecoItemList();
end

function UIDormItemChangePanel.OnDecoItemClicked(gameObject)
    self = UIDormItemChangePanel;
    local btn = UIUtils.GetButtonListener(gameObject);

    local dormScene = CS.SceneSys.Instance.currentScene;

    --dormScene:ResetDormDeco(self.mCurDormId,self.mCurArea)
    dormScene:SwitchDormDeco(btn.param.mData);

    for i = 1, #self.mDormItemList do
        if(self.mDormItemList[i].mData.Slot == btn.param.mData.Slot) then
            self.mDormItemList[i]:SetSelect(false);
        end
    end

    btn.param:SetSelect(true);

    self.mCurSelectDecoItem = btn.param;

    self.mDecoChangeDict[btn.param.mData.Slot] = btn.param.mData.Id;
end

function UIDormItemChangePanel.OnDecoItemConfirmClick(gameObject)
    self = UIDormItemChangePanel;

    --NetCmdDormData:SendDormDecorationMsg(self.mCurDormId,self.mCurArea,self.mCurSelectDecoItem.mData.Id,self.mCurSelectDecoItem.mData.Slot,self.OnDecoPlacedCallback);
    NetCmdDormData:SendDormDecorationMsg(self.mCurDormId,self.mCurArea,self.mDecoChangeDict,self.OnDecoPlacedCallback);
end

function UIDormItemChangePanel.OnDecoPlacedCallback(ret)
    self = UIDormItemChangePanel;
    if ret == CS.CMDRet.eSuccess then
        printstack("物件摆放成功");
        self.mDecoChangeDict = {};
        self.InitDecoItemList();
        CS.DormStateMachine.Instance:OnPlayerEvent();
    else
        printstack("物件摆放失败");
    end
end

function UIDormItemChangePanel.UpdateDecoItem()
    self = UIDormItemChangePanel;

    for i = 1, #self.mDormItemList do
        self.mDormItemList[i]:SetEquipped();
    end
end

function UIDormItemChangePanel.OnReturnClick(gameObject)
    self = UIDormItemChangePanel;
    self.Close();
    --SceneSys:ReturnLast();
end

function UIDormItemChangePanel.OnShow()
    self = UIDormItemChangePanel;
end

function UIDormItemChangePanel.OnRelease()
    self = UIDormItemChangePanel;
    self.mSlotItemDict = {};
    self.mDecoChangeDict = {};
    self.mDormItemList:Clear();
end
