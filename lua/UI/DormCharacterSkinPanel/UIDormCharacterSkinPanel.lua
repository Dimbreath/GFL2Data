---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 18/11/7 20:31
---

require("UI.UIBasePanel")
require("UI.AdjutantPanel.AdjutantItem.UIAdjutantItem");

UIDormCharacterSkinPanel = class("UIDormCharacterSkinPanel", UIBasePanel);
UIDormCharacterSkinPanel.__index = UIDormCharacterSkinPanel;

UIDormCharacterSkinPanel.mView = nil;
UIDormCharacterSkinPanel.mCurArea = 1;
UIDormCharacterSkinPanel.mSlotItemDict = {};
UIDormCharacterSkinPanel.mAreaButtonDict = {};
UIDormCharacterSkinPanel.mDormItemList = nil;

UIDormCharacterSkinPanel.mCurDormId = 1;
UIDormCharacterSkinPanel.mCurCharacterId = 1;
UIDormCharacterSkinPanel.mCurCharacterData = nil;

UIDormCharacterSkinPanel.mSkinChangeDict = {};

UIDormCharacterSkinPanel.SkinBarTypeStr = {"头发","脸","身体"};

function UIDormCharacterSkinPanel:ctor()
    UIDormCharacterSkinPanel.super.ctor(self);
end

function UIDormCharacterSkinPanel.Open(currentGun, selectedCount)
    print("selectedCount  = " ..selectedCount)
    self = UIDormCharacterSkinPanel;

    UIDormCharacterSkinPanel:InitShow();
end

function UIDormCharacterSkinPanel.Close()
    UIManager.CloseUI(UIDef.UIDormCharacterSkinPanel);
end

function UIDormCharacterSkinPanel.Hide()
    self = UIDormCharacterSkinPanel;
    self:Show(false);
end

function UIDormCharacterSkinPanel.Init(root, data)
    UIDormCharacterSkinPanel.super.SetRoot(UIDormCharacterSkinPanel, root);

    UIDormCharacterSkinPanel.mData = data;
    UIDormCharacterSkinPanel.mView = UIDormCharacterSkinPanelView;
    UIDormCharacterSkinPanel.mView:InitCtrl(root);
end


function UIDormCharacterSkinPanel.OnInit()
    self = UIDormCharacterSkinPanel;

    self.mCurDormId = self.mData;
    self.mDormItemList = List:New();

    UIUtils.GetButtonListener(self.mView.mBtn_back.gameObject).onClick = self.OnReturnClick;
    UIUtils.GetButtonListener(self.mView.mBtn_Ensure.gameObject).onClick = self.OnSkinItemConfirmClick;

    self.InitSkinItemList(self.mCurCharacterId);

end


function UIDormCharacterSkinPanel.InitSkinItemList(characterId)
    self = UIDormCharacterSkinPanel;

    --local slotDatas = NetCmdDormData:GetDormDecoSlotListByDormAndArea(self.mCurDormId,self.mCurArea);
    self.mCurCharacterData = NetCmdDormData:GetDormCharacterDataById(characterId);
    CS.DormStateMachine.Instance:MainState(self.mCurCharacterData.SkinChangeAction);

    self.mDormItemList:Clear();
    for i = 0, self.mView.mTrans_BarList.childCount-1 do
		local obj = self.mView.mTrans_BarList:GetChild(i);
		gfdestroy(obj);
    end


    for i = 1,3 do
        local barItem = UIDormBarItem.New();
        local data = self.SkinBarTypeStr[i];
        barItem:InitCtrl(self.mView.mTrans_BarList);
        barItem:SetData(data);
        self.mSlotItemDict[i] = barItem;
    end

    for i = 0,self.mCurCharacterData.Hair.Count-1 do
        local decoItem = UIDormNodeItem.New();
        local data = self.mCurCharacterData.Hair[i];
        local parent = self.mSlotItemDict[1];
        decoItem:InitCtrl(parent.mTrans_NodeList);
        decoItem:SetSkinData(data,1); 
        local btn = UIUtils.GetButtonListener(decoItem.mBtn_Icon.gameObject);
        btn.onClick = self.OnSkinItemClicked;
        btn.param = decoItem;
        self.mDormItemList:Add(decoItem);

        UIUtils.ForceRebuildLayout(parent.mTrans_NodeList)
    end

    for i = 0,self.mCurCharacterData.Face.Count-1 do
        local decoItem = UIDormNodeItem.New();
        local data = self.mCurCharacterData.Face[i];
        local parent = self.mSlotItemDict[2];
        decoItem:InitCtrl(parent.mTrans_NodeList);
        decoItem:SetSkinData(data,2); 
        local btn = UIUtils.GetButtonListener(decoItem.mBtn_Icon.gameObject);
        btn.onClick = self.OnSkinItemClicked;
        btn.param = decoItem;
        self.mDormItemList:Add(decoItem);

        UIUtils.ForceRebuildLayout(parent.mTrans_NodeList)
    end

    for i = 0,self.mCurCharacterData.Body.Count-1 do
        local decoItem = UIDormNodeItem.New();
        local data = self.mCurCharacterData.Body[i];
        local parent = self.mSlotItemDict[3];
        decoItem:InitCtrl(parent.mTrans_NodeList);
        decoItem:SetSkinData(data,3); 
        local btn = UIUtils.GetButtonListener(decoItem.mBtn_Icon.gameObject);
        btn.onClick = self.OnSkinItemClicked;
        btn.param = decoItem;
        self.mDormItemList:Add(decoItem);

        UIUtils.ForceRebuildLayout(parent.mTrans_NodeList)
    end

    UIUtils.ForceRebuildLayout(self.mView.mTrans_BarList)
end


function UIDormCharacterSkinPanel.OnSkinItemClicked(gameObject)
    self = UIDormCharacterSkinPanel;
    local btn = UIUtils.GetButtonListener(gameObject);

    -- local dormScene = CS.SceneSys.Instance.currentScene;
    -- dormScene:SwitchDormDeco(btn.param.mData);

    for i = 1, #self.mDormItemList do
        if(self.mDormItemList[i].mSkinType == btn.param.mSkinType) then
            self.mDormItemList[i]:SetSelect(false);
        end
    end

    btn.param:SetSelect(true);

    local dormScene = CS.SceneSys.Instance.currentScene;
    dormScene:ChangeSkin(self.mCurCharacterData.Name,btn.param.mData,btn.param.mSkinType);
    -- self.mCurSelectDecoItem = btn.param;

    -- self.mDecoChangeDict[btn.param.mData.Slot] = btn.param.mData.Id;
end

function UIDormCharacterSkinPanel.OnSkinItemConfirmClick(gameObject)
    self = UIDormCharacterSkinPanel;

    --NetCmdDormData:SendDormDecorationMsg(self.mCurDormId,self.mCurArea,self.mDecoChangeDict,self.OnDecoPlacedCallback);
end

function UIDormCharacterSkinPanel.OnSkinChangedCallback(ret)
    self = UIDormCharacterSkinPanel;
    if ret == CS.CMDRet.eSuccess then
        printstack("物件摆放成功");
        self.mSkinChangeDict = {};
        self.InitSkinItemList(self.mCurCharacterId);
        --CS.DormStateMachine.Instance:OnPlayerEvent();
    else
        printstack("物件摆放失败");
    end
end

function UIDormCharacterSkinPanel.UpdateDecoItem()
    self = UIDormCharacterSkinPanel;

    for i = 1, #self.mDormItemList do
        self.mDormItemList[i]:SetEquipped();
    end
end

function UIDormCharacterSkinPanel.OnReturnClick(gameObject)
    self = UIDormCharacterSkinPanel;

    CS.DormStateMachine.Instance:PlayStateByWeight();

    self.Close();
    --SceneSys:ReturnLast();
end

function UIDormCharacterSkinPanel.OnShow()
    self = UIDormCharacterSkinPanel;
end

function UIDormCharacterSkinPanel.OnRelease()
    self = UIDormCharacterSkinPanel;
    self.mSlotItemDict = {};
    self.mSkinChangeDict = {};
    self.mDormItemList:Clear();
end
