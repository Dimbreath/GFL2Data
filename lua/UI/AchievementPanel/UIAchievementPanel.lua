---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 18/11/7 20:31
---

require("UI.UIBasePanel")
require("UI.AchievementPanel.UIAchievementPanelView");

UIAchievementPanel = class("UIAchievementPanel", UIBasePanel);
UIAchievementPanel.__index = UIAchievementPanel;

UIAchievementPanel.mView = nil;
UIAchievementPanel.mData = nil;
UIAchievementPanel.mCurTagItem = nil;
UIAchievementPanel.mAchieveItemList = {};
UIAchievementPanel.mUICommonReceiveItem=nil;
UIAchievementPanel.mUICommonReceiveItemData = nil;

UIAchievementPanel.mPath_UICommonTabButtonItem = "UICommonFramework/UI_CommonTabButtonItem.prefab"

function UIAchievementPanel:ctor()
    UIAchievementPanel.super.ctor(self);
end

function UIAchievementPanel.Open()
    self = UIAchievementPanel;
end

function UIAchievementPanel.Close()
    UIManager.CloseUI(UIDef.UIAchievementPanel);
end

function UIAchievementPanel.Hide()
    self = UIAchievementPanel;
    self:Show(false);
end

function UIAchievementPanel.Init(root, data)
    self = UIAchievementPanel;
    self.mData = data;
    self:SetRoot(root);
end


function UIAchievementPanel.OnInit()
    self = UIAchievementPanel;

    self.mView = UIAchievementPanelView;
    self.mView:InitCtrl(self.mUIRoot);

    UIUtils.GetButtonListener(UIAchievementPanel.mView.mBtn_Return.gameObject).onClick = self.OnReturnClicked;

    self:InitAchieveTagList();
end

function UIAchievementPanel.OnShow()
    self = UIAchievementPanel;

    self:UpdatePanel()
end

function UIAchievementPanel:InitAchieveTagList()
    local tagDict = NetCmdAchieveData.AchieveTagDict;
    local prefab = UIUtils.GetGizmosPrefab(UIAchievementPanel.mPath_UICommonTabButtonItem,self);
    local iter = tagDict:GetEnumerator();
    local i = 0;
    while iter:MoveNext() do
        local k = iter.Current.Value.tagId;
        local v1 = iter.Current.Value.hintCHS;
        local v2 = iter.Current.Value.hintEN;
        local name = TableData.GetHintById(v1);
        local en_name = TableData.GetHintById(v2);
   
        local gObj = instantiate(prefab)
        local tagItem = UICommonTabButtonItem.New()
        tagItem:InitCtrl(gObj.transform)
        tagItem:SetName(k,name,en_name);
        UIUtils.AddListItem(gObj, self.mView.mVLayout_AchievementTypeList_TypeList.transform)
        UIUtils.GetButtonListener(tagItem:GetSelfButton().gameObject).onClick = function(gObj)
            self.OnClickTag(gObj, tagItem)
        end

        if(i == 0) then
            self.OnClickTag(gObj, tagItem)
        end
        i  = i + 1;
    end  
end


function UIAchievementPanel:UpdateAchieveList()
    local list = NetCmdAchieveData:GetAchieveDataListByTag(self.mCurTagItem.tagId);

    for _, item in ipairs(self.mAchieveItemList) do
        if item then
            item:InitData(nil);
        end
    end

    for i = 0, list.Count - 1 do
        local data = list[i];
        local item = nil;

        if #self.mAchieveItemList < i + 1 then
            item = UIAchievementListItem.New();
            item:InitCtrl(self.mView.mTrans_AchievementPanel_AchievementListPanel_QuestList.gameObject);
            table.insert(self.mAchieveItemList, item)
        else
            item = self.mAchieveItemList[i + 1]
        end
        item:InitData(data);

        local itemBtn1 = UIUtils.GetButtonListener(item.mBtn_GotoQuest.gameObject);
        itemBtn1.onClick = self.OnGotoClick;
        itemBtn1.param = data;

        itemBtn1 = UIUtils.GetButtonListener(item.mBtn_CompleteQuest.gameObject);
        itemBtn1.onClick = self.OnReceiveClick;
        itemBtn1.param = data;
    end

    local total = NetCmdAchieveData.TotalCount;
    local finish = NetCmdAchieveData.FinishCount;

    self.mView.mText_AchievementPanel_AchievementQuantityPanel_AchievementQuantityText.text = finish.."<size=36>/"..total.."</size>";
    self.mView.mImage_AchievementPanel_AchievementQuantityPanel_Progress.fillAmount = finish/total;
end


function UIAchievementPanel.OnClickTag(gObj, item)
    self = UIAchievementPanel;
    if self.mCurTagItem ~= nil then
        if item.tagId ~= self.mCurTagItem.tagId then
            self.mCurTagItem:SetItemState(false)
        else
            return
        end
    end
    item:SetItemState(true)
    self.mCurTagItem = item
    self:UpdatePanel()
end

function UIAchievementPanel:UpdatePanel()
    self:UpdateAchieveList();
end

function UIAchievementPanel.OnGotoClick(gameObject)
    self = UIAchievementPanel;

    local itemBtn = UIUtils.GetButtonListener(gameObject)
	local dailyData = itemBtn.param
	local paramArray = {dailyData.SwitchParamArray}
	SceneSwitch:SwitchByID(dailyData.SwitchType,paramArray)
end

function UIAchievementPanel.OnReceiveClick(gameObject)
    self = UIAchievementPanel;
    local itemBtn = UIUtils.GetButtonListener(gameObject)
    local dailyData = itemBtn.param
    self.mUICommonReceiveItemData = itemBtn.param;
    
    NetCmdAchieveData:SendReqTakeAchievementRewardCmd(dailyData.Id,self.OnReceivedCallback);
end

function UIAchievementPanel.OnReceivedCallback(ret)
    self = UIAchievementPanel;
	
    if ret == CS.CMDRet.eSuccess then
        self:UpdatePanel();
        gfdebug("领取成功");

        if self.mUICommonReceiveItem == nil then
            self.mUICommonReceiveItem=UICommonReceiveItem.New();
            self.mUICommonReceiveItem:InitCtrl(self.mView.mUIRoot);
            UIUtils.GetButtonListener(self.mUICommonReceiveItem.mBtn_Confirm.gameObject).onClick=self.CloseTakeQuestRewardCallBack;
            
        end
    
        local rewardlist = {};
        for i = 0, self.mUICommonReceiveItemData.RewardList.Count -1 do
            local id = self.mUICommonReceiveItemData.RewardList[i].itemid;
            local num = self.mUICommonReceiveItemData.RewardList[i].num;
            rewardlist[id] = num;
        end
        self.mUICommonReceiveItem:SetData(rewardlist);

	else
		gfdebug("领取失败");
	end	
end

function UIAchievementPanel.CloseTakeQuestRewardCallBack(data)
    self=UIAchievementPanel;

    if self.mUICommonReceiveItem~=nil then
        self.mUICommonReceiveItem:SetData(nil);
    end
end

function UIAchievementPanel.OnReturnClicked(gameObject)
    self = UIAchievementPanel;
    self.Close();
end

function UIAchievementPanel.OnRelease()
    self = UIAchievementPanel;
    self.mCurTagItem = nil;
    self.mAchieveItemList = {}
    self.mUICommonReceiveItemData = nil; 
    self.mUICommonReceiveItem = nil;
end
