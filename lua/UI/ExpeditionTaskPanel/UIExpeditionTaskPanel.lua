---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 18/11/7 20:31
---

require("UI.UIBasePanel")
require("UI.ExpeditionTaskPanel.UIExpeditionTaskPanelView");
require("UI.CharacterSelectionItem.CharacterSelectionItem");


UIExpeditionTaskPanel = class("UIExpeditionTaskPanel", UIBasePanel);
UIExpeditionTaskPanel.__index = UIExpeditionTaskPanel;

UIExpeditionTaskPanel.mData = nil;
UIExpeditionTaskPanel.mView = nil;
UIExpeditionTaskPanel.mGuns = {};
UIExpeditionTaskPanel.mSelectionRoots = {};
UIExpeditionTaskPanel.mSelectionItems = {};

UIExpeditionTaskPanel.mPath_CharacterSelectionItem = "Expedition/CharacterSelectionItem.prefab"

function UIExpeditionTaskPanel:ctor()
    UIExpeditionTaskPanel.super.ctor(self);
end

function UIExpeditionTaskPanel.Open()
    UIExpeditionTaskPanel.OpenUI(UIDef.UIExpeditionTaskPanel);
end

function UIExpeditionTaskPanel.Close()
    UIManager.CloseUI(UIDef.UIExpeditionTaskPanel);
end

function UIExpeditionTaskPanel.Init(root, data)
    self = UIExpeditionTaskPanel;
    self.mData = data;
    self:SetRoot(root);
    
end


function UIExpeditionTaskPanel.OnInit()
    self = UIExpeditionTaskPanel;

    self.mView = UIExpeditionTaskPanelView;
    self.mView:InitCtrl(self.mUIRoot);

    UIUtils.GetButtonListener(self.mView.mBtn_TopInformation_Return.gameObject).onClick = self.OnReturnClick;
    UIUtils.GetButtonListener(self.mView.mBtn_ExpeditionTask_CharacterSelection_CharacterSelection1.gameObject).onClick = self.OnOpenSelectionPanel;
    UIUtils.GetButtonListener(self.mView.mBtn_ExpeditionTask_CharacterSelection_CharacterSelection2.gameObject).onClick = self.OnOpenSelectionPanel;
    UIUtils.GetButtonListener(self.mView.mBtn_ExpeditionTask_CharacterSelection_CharacterSelection3.gameObject).onClick = self.OnOpenSelectionPanel;
    UIUtils.GetButtonListener(self.mView.mBtn_ExpeditionTask_CharacterSelection_CharacterSelection4.gameObject).onClick = self.OnOpenSelectionPanel;
    UIUtils.GetButtonListener(self.mView.mBtn_ExpeditionTask_ExpeditionTaskAward_GoExpedition_GoExpedition.gameObject).onClick = self.OnGoExpeditionClicked;

    self.mSelectionRoots = {
        self.mView.mTrans_ExpeditionTask_CharacterSelection_CharacterSelection1_Text,
        self.mView.mTrans_ExpeditionTask_CharacterSelection_CharacterSelection2_Text,
        self.mView.mTrans_ExpeditionTask_CharacterSelection_CharacterSelection3_Text,
        self.mView.mTrans_ExpeditionTask_CharacterSelection_CharacterSelection4_Text
    };

    self.mView:InitData(self.mData);
    self:InitResources();
end

function UIExpeditionTaskPanel:InitResources()
    self.mView.mText_TopInformation_Coin_BodyCoin_CoinAmount.text = GlobalData.stamina_ext;
    self.mView.mText_TopInformation_Coin_GoldCoin_CoinAmount.text = GlobalData.cash;
    local data = NetCmdItemData:GetNormalItem(201);
	if(data ~= nil) then
		self.mView.mText_TopInformation_Coin_TokenCoin_CoinAmount.text= data.item_num;
	else
		self.mView.mText_TopInformation_Coin_TokenCoin_CoinAmount.text = 0;
    end
end

function UIExpeditionTaskPanel.OnOpenSelectionPanel(gameobj)
    self = UIExpeditionTaskPanel;
    local excludeList = NetCmdExpeditionData:GetDispatchedGunIds(self.mData.Level);
    local selectedList = List:New(CS.System.Int32);

    for i = 1, #self.mGuns do
        selectedList:Add(self.mGuns[i]);
    end

    UICharacterSelectionPanel.SetExcludeIdList(excludeList);
    UICharacterSelectionPanel.SetSelectedIdList(selectedList);
    UICharacterSelectionPanel.OpenByPre(UIDef.UIExpeditionTaskPanel, false);
end

function UIExpeditionTaskPanel.OnSelectionCallback(param)
    self = UIExpeditionTaskPanel;
    self.mGuns = {};
    local list = param;
    local prefab =  UIUtils.GetGizmosPrefab(self.mPath_CharacterSelectionItem,self);

    for i = 1, 4 do
        if(self.mSelectionRoots[i].transform.childCount > 0) then
		    local obj = self.mSelectionRoots[i].transform:GetChild(0);
            gfdestroy(obj);
        end
    end

    for i = 1, list:Count() do
        local instObj = instantiate(prefab);
        local item = CharacterSelectionItem.New();
        local gun = NetCmdTeamData:GetGunByID(list[i]);
        local gunType = gun.TabGunData.typeInt;

        item:InitCtrl(instObj.transform);
        item:InitData(gun,self.mData:IsTypeFit(gunType));
        
        UIUtils.AddListItem(instObj, self.mSelectionRoots[i].transform);

        self.mSelectionItems[i] = item;
        self.mGuns[i] = list[i];
    end

    if(#self.mGuns > 0) then
        self.mView.mBtn_ExpeditionTask_ExpeditionTaskAward_GoExpedition_GoExpedition.interactable = true;
    else
        self.mView.mBtn_ExpeditionTask_ExpeditionTaskAward_GoExpedition_GoExpedition.interactable = false;
    end
end

function UIExpeditionTaskPanel.OnGoExpeditionClicked(gameobj)
    self = UIExpeditionTaskPanel;
    
    --TODO 体力消耗

    NetCmdExpeditionData:SendDungeonDispatchMission(self.mData.Id,self.mGuns,self.OnGoExpeditionCallback);
end

function UIExpeditionTaskPanel.OnGoExpeditionCallback(ret)
    self = UIExpeditionTaskPanel;
	
	if ret == CS.CMDRet.eSuccess then
        gfdebug("远征开始成功");
        local ExpeditionPanel = UIExpeditionPanel;
        ExpeditionPanel:InitTaskItems();
        self.Close();
	else
		gfdebug("远征开始失败");
	end	
end

function UIExpeditionTaskPanel.OnShow()
    self = UIExpeditionTaskPanel;
end

function UIExpeditionTaskPanel.OnRelease()
    self = UIExpeditionTaskPanel;

    self.mTypeItemList = {};
    self.mGuns = {};
end

function UIExpeditionTaskPanel.OnReturnClick(gameobj)	
    self = UIExpeditionTaskPanel;
	self.Close();
end

