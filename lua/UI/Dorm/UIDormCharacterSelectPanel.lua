---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 18/11/7 20:31
---

require("UI.UIBasePanel")

UIDormCharacterSelectPanel = class("UIDormCharacterSelectPanel", UIBasePanel);
UIDormCharacterSelectPanel.__index = UIDormCharacterSelectPanel;
UIDormCharacterSelectPanel.mView = nil;

UIDormCharacterSelectPanel.mListFreeCharacterItem = nil;
UIDormCharacterSelectPanel.mSelectCid = 0;

function UIDormCharacterSelectPanel:ctor()
    UIDormCharacterSelectPanel.super.ctor(self);
end

function UIDormCharacterSelectPanel.Open(currentGun, selectedCount)
    self = UIDormCharacterSelectPanel;

end

function UIDormCharacterSelectPanel.Close()
    UIManager.CloseUI(UIDef.UIDormCharacterSelectPanel);
end

function UIDormCharacterSelectPanel.Hide()
    self = UIDormCharacterSelectPanel;
    self:Show(false);
end

function UIDormCharacterSelectPanel.Init(root, data)
    UIDormCharacterSelectPanel.super.SetRoot(UIDormCharacterSelectPanel, root);

    UIDormCharacterSelectPanel.mData = data;
    UIDormCharacterSelectPanel.mView = UIDormCharacterSelectPanelView;
    UIDormCharacterSelectPanel.mView:InitCtrl(root);

    CS.UIMainPanel.SetDormCanvasScaleTemp()
end


function UIDormCharacterSelectPanel.OnInit()
    self = UIDormCharacterSelectPanel;

    UIUtils.GetButtonListener(self.mView.mBtn_Close.gameObject).onClick = self.OnReturnClick;
    UIUtils.GetButtonListener(self.mView.mBtn_CharacterSlotsAdd.gameObject).onClick = self.OnAddSlotClick;
    UIUtils.GetButtonListener(self.mView.mBtn_Ensure.gameObject).onClick = self.OnEnsureClick;

    self.mListFreeCharacterItem = List:New();

    self:InitCharacterSelectPanel();
end

function UIDormCharacterSelectPanel:InitCharacterSelectPanel( )
    local freeDormNum = NetCmdDormData:GetUnlockedDormNum();
    local bindCharacterList = NetCmdDormData:GetBindCharacter();

    local count = self.mView.mTrans_AddSlotList.transform.childCount;
	local tr = self.mView.mTrans_AddSlotList.transform;

	for i = count - 1, 0, -1 do
		gfdestroy(tr:GetChild(i).gameObject);
    end


    for i = 0, bindCharacterList.Count -1 do
        local slotItem = Btn_CharacterSlotsItem.New();
        slotItem:InitCtrl(self.mView.mTrans_AddSlotList);

        local data = TableData.listGunCharacterDatas:GetDataById(bindCharacterList[i].cid);
        slotItem:SetData(data);

        local btn = UIUtils.GetButtonListener(slotItem.mBtn_CharacterSlotsItem.gameObject);
        btn.onClick = self.EnterDormClick;
        btn.param = data;
    end

    for i = 1,freeDormNum do
        local slotItem = Btn_CharacterSlotsItem.New();
        slotItem:InitCtrl(self.mView.mTrans_AddSlotList);

        local btn = UIUtils.GetButtonListener(slotItem.mBtn_CharacterSlotsItem.gameObject);
        btn.onClick = self.OnOpenBindCharacterPanel;
    end

end

function UIDormCharacterSelectPanel:InitUnBindCharacterPanel( )
    local unbindCharacterList = NetCmdDormData:GetFreeCharacter();

    local count = self.mView.mTrans_AddCharacterList.transform.childCount;
	local tr = self.mView.mTrans_AddCharacterList.transform;

	for i = count - 1, 0, -1 do
		gfdestroy(tr:GetChild(i).gameObject);
    end
    self.mListFreeCharacterItem:Clear();

    for i = 0, unbindCharacterList.Count -1 do
        local slotItem = Btn_CharacterSlotsItem.New();
        slotItem:InitCtrl(self.mView.mTrans_AddCharacterList);

        local data = TableData.listGunCharacterDatas:GetDataById(unbindCharacterList[i].cid);
        slotItem:SetData(data);

        local btn = UIUtils.GetButtonListener(slotItem.mBtn_CharacterSlotsItem.gameObject);
        btn.onClick = self.OnBindCharacterClick;
        btn.param = slotItem;

        self.mListFreeCharacterItem:Add(slotItem);
    end
end

function UIDormCharacterSelectPanel.OnOpenBindCharacterPanel(gameObject)
    self = UIDormCharacterSelectPanel;

    self:InitUnBindCharacterPanel();
    setactive(self.mView.mTrans_characterSelect,true);
end

function UIDormCharacterSelectPanel.OnBindCharacterClick(gameObject)
    self = UIDormCharacterSelectPanel;

    local btnTrigger = getcomponent(gameObject, typeof(CS.ButtonEventTriggerListener))
    local slot = btnTrigger.param;
    
    for i = 1, #self.mListFreeCharacterItem do
        self.mListFreeCharacterItem[i]:SetSelect(false);
    end

    slot:SetSelect(true);
    self.mSelectCid = slot.mData.id;
    --NetCmdDormData:SendDormBindCharacterMsg(data.id,self.OnBindCharacterCallback);
end

function UIDormCharacterSelectPanel.OnEnsureClick(gameObject)
    self = UIDormCharacterSelectPanel;

    if(self.mSelectCid ~= 0) then
        NetCmdDormData:SendDormBindCharacterMsg(self.mSelectCid,self.OnBindCharacterCallback);
        self.mSelectCid = 0;
    end
end

function UIDormCharacterSelectPanel.OnBindCharacterCallback(ret)
    self = UIDormCharacterSelectPanel;

    if ret == CS.CMDRet.eSuccess then
        printstack("绑定宿舍成功")
        setactive(self.mView.mTrans_characterSelect,false);
        self:InitCharacterSelectPanel();
        self.mSelectCid = 0;
    end
end

function UIDormCharacterSelectPanel.OnAddSlotClick(gameObject)
    self = UIDormCharacterSelectPanel;

    NetCmdDormData:SendDormUnlockMsg(self.OnAddSlotCallback);
end


function UIDormCharacterSelectPanel.OnAddSlotCallback(ret)
    self = UIDormCharacterSelectPanel;

    if ret == CS.CMDRet.eSuccess then
        printstack("增加宿舍成功")

        self:InitCharacterSelectPanel();
    end
end

function UIDormCharacterSelectPanel.EnterDormClick(gameObject)
    self = UIDormCharacterSelectPanel;
    local btnTrigger = getcomponent(gameObject, typeof(CS.ButtonEventTriggerListener))
    local data = btnTrigger.param;
    
    CS.UIMainPanel.EnterDorm(data.id);
end


function UIDormCharacterSelectPanel.OnReturnClick(gameObject)
    self = UIDormCharacterSelectPanel;

    if(self.mView.mTrans_characterSelect.gameObject.activeSelf) then
        setactive(self.mView.mTrans_characterSelect,false);
    else
        self.Close();
    end
end

function UIDormCharacterSelectPanel.OnShow()
    self = UIDormCharacterSelectPanel;
end

function UIDormCharacterSelectPanel.OnRelease()
    self = UIDormCharacterSelectPanel;
    
end
